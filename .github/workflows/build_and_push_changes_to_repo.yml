name: build_and_push_changes_to_repo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Find Solution File
        id: find-solution
        shell: pwsh
        run: |
          $solutionPath = Get-ChildItem -Recurse -Filter *.sln | Select-Object -First 1
          if (-Not $solutionPath) {
            Write-Host "Error: No solution file (.sln) found"
            exit 1
          }
          echo "Found solution file at: $solutionPath"
          echo "SOLUTION_PATH=$solutionPath" >> $env:GITHUB_ENV

      - name: Update version.json for version control
        shell: pwsh
        run: |
          $jsonPath = "version.json"
          if (Test-Path $jsonPath) {
            $jsonContent = Get-Content $jsonPath | ConvertFrom-Json
            
            # Extract and increment the version
            $currentVersion = $jsonContent.version -split "\."
            $major = [int]$currentVersion[0]
            $minor = [int]$currentVersion[1]
            $patch = [int]$currentVersion[2] + 1  # Increment patch version

            $newVersion = "$major.$minor.$patch"
            $jsonContent.version = $newVersion

            # Save the updated JSON
            $jsonContent | ConvertTo-Json -Depth 10 | Set-Content $jsonPath

            Write-Host "Updated version to: $newVersion"
          } else {
            Write-Host "Error: version.json not found"
            exit 1
          }

      - name: Commit and push version.json update
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          git pull --rebase https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/rahulchavan05/solution-pip.git main
          
          git add version.json
          git commit -m "Increment version in version.json" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/rahulchavan05/solution-pip.git HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore NuGet packages
        run: dotnet restore "${{ env.SOLUTION_PATH }}"

      - name: Build solution
        run: dotnet build "${{ env.SOLUTION_PATH }}" -c Release

      - name: Run unit tests
        run: dotnet test "${{ env.SOLUTION_PATH }}" -c Release --collect:"Code Coverage"

      - name: Install the ReportGenerator tool
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
        shell: pwsh

      - name: Commit and push build output
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          # Pull latest changes to avoid conflicts
          git pull --rebase https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/rahulchavan05/solution-pip.git main

          # Add build output files
          git add **/bin/Release/*
          git commit -m "Add build output files" || echo "No changes to commit"

          # Push changes
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/rahulchavan05/solution-pip.git HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
